####### Makefile Conventions - Directory variables

srcdir = .
prefix = /usr/local

exec_prefix = $(prefix)
sysconfdir = $(prefix)/etc
includedir = $(prefix)/include
datarootdir = $(prefix)/share
localstatedir = $(prefix)/var

bindir = $(exec_prefix)/bin
libdir = $(exec_prefix)/lib
libexecdir = $(exec_prefix)/libexec
sbindir = $(exec_prefix)/sbin

datadir = $(datarootdir)
docdir = $(datarootdir)/doc/pev
infodir = $(datarootdir)/info
localedir = $(datarootdir)/locale

mandir = $(datarootdir)/man
manext = .1
man1dir = $(mandir)/man1
man1ext = .1

####### Makefile Conventions - Utilities

CC = gcc
LINK = $(CC)
CHK_DIR_EXISTS = test -d
CHK_FILE_EXISTS = test -f
INSTALL = install
INSTALL_DATA = ${INSTALL} -m 755
INSTALL_PROGRAM = $(INSTALL)
SYMLINK = ln -sf
MKDIR = mkdir -p
RM = rm -f
RM_DIR = rm -rf

####### Compiler options

CFLAGS += -pipe -fPIC -W -Wall -Wextra -pedantic -std=c99 -g

GNU_SOURCE += -D_GNU_SOURCE

VERSION = 1.0
LIBNAME = libpe

libpe_BUILDDIR = $(CURDIR)/build
#libpe_SRCS_FILTER = $(wildcard ${dir}/*.c)
#libpe_SRCS = $(foreach dir, ${srcdir}, ${libpe_SRCS_FILTER})
#libpe_OBJS = $(addprefix ${libpe_BUILDDIR}/, $(addsuffix .o, $(basename ${libpe_SRCS})))
libpe_OBJS = $(libpe_BUILDDIR)/error.o $(libpe_BUILDDIR)/pe.o 

####### Build rules

.PHONY : libpe install uninstall clean

all: $(libpe_OBJS)

libpe: $(libpe_OBJS)
	$(LINK) -shared $(LDFLAGS) -o $(LIBNAME).so $^

$(libpe_BUILDDIR)/%.o: %.c
	@$(CHK_DIR_EXISTS) $(dir $@) || $(MKDIR) $(dir $@)
	$(CC) $(CFLAGS) $(GNU_SOURCE) -c $< -o $@

install: installdirs
	$(INSTALL_DATA) $(LIBNAME).so $(DESTDIR)$(libdir)/$(LIBNAME).so.$(VERSION)
	cd $(DESTDIR)$(libdir); $(SYMLINK) $(LIBNAME).so.$(VERSION) $(LIBNAME).so
	cd $(DESTDIR)$(libdir); $(SYMLINK) $(LIBNAME).so.$(VERSION) $(LIBNAME).so.1

installdirs:
	@$(CHK_DIR_EXISTS) $(DESTDIR) || $(MKDIR) $(DESTDIR)
	@$(CHK_DIR_EXISTS) $(DESTDIR)$(libdir) || $(MKDIR) $(DESTDIR)$(libdir)

uninstall:
	$(RM) $(DESTDIR)$(libdir)/$(LIBNAME).so*

clean:
	$(RM_DIR) $(libpe_BUILDDIR)
	$(RM) *.o *.so
