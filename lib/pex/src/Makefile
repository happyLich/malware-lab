#######Common  Makefile Conventions - Directory variables

srcdir = .
prefix = /usr/local

exec_prefix = $(prefix)
sysconfdir = $(prefix)/etc
includedir = $(prefix)/include
datarootdir = $(prefix)/share
localstatedir = $(prefix)/var

bindir = $(exec_prefix)/bin
libdir = $(exec_prefix)/lib
libexecdir = $(exec_prefix)/libexec
sbindir = $(exec_prefix)/sbin

datadir = $(datarootdir)
docdir = $(datarootdir)/doc/pev
infodir = $(datarootdir)/info
localedir = $(datarootdir)/locale

mandir = $(datarootdir)/man
manext = .1
man1dir = $(mandir)/man1
man1ext = .1

pluginsdir = $(DESTDIR)$(libdir)/pev/plugins

#######Common  Makefile Conventions - Utilities

export CC = gcc
export GCC = g++
export LINK = $(CC)
export CHK_DIR_EXISTS = test -d
export CHK_FILE_EXISTS = test -f
export INSTALL = install
export INSTALL_DATA = ${INSTALL} -m 755
export INSTALL_PROGRAM = ${INSTALL}
export SYMLINK = ln -sf
export MKDIR = mkdir -p
export RM = rm -f
export RM_DIR = rm -rf

#######Pex Compiler options

pex_LDFLAGS += 
pex_CFLAGS += -I$(pex_INCPATH)  -pipe -fPIC  -O0 -W -Wall -Wextra  -pedantic -std=c99 -g
export pex_GNU_SOURCE += -D_GNU_SOURCE

pex_PROGS = readpe rva2ofs ofs2rva pehash pesec pescan pepack pestr pedis peres unlznt1
pex_PLUGINS_DIR = $(srcdir)/plugins
pex_SHAREDIR = $(datadir)/pev
pex_LIBPE = $(srcdir)/lib/libpe
pex_LIBUDIS86 = $(srcdir)/lib/libudis86
pex_LIBFUZZY = $(srcdir)/lib/libfuzzy
pex_LIBLZNT1 = $(srcdir)/lib/liblznt1
pex_MANDIR = $(srcdir)/../doc/manpages
export pex_INCPATH = $(srcdir)/../include

pex_SRC_DIRS = $(srcdir) $(srcdir)/compat $(pex_LIBPE) $(pex_LIBFUZZY) $(pex_LIBLZNT1) $(pex_LIBUDIS86)/libudis86 

export pex_BUILDDIR = ./build
pex_SRCS_FILTER = $(wildcard ${dir}/*.c)
pex_SRCS = $(foreach dir, ${pex_SRC_DIRS}, ${pex_SRCS_FILTER})
pex_lib_OBJS = $(addprefix ${pex_BUILDDIR}/, $(addsuffix .o, $(basename ${pex_SRCS})))
pex_LIBNAME = libpex

pex_COMMON_DEPS = \
	$(pex_BUILDDIR)/compat/strlcat.o \
	$(pex_BUILDDIR)/config.o \
	$(pex_BUILDDIR)/dylib.o \
	$(pex_BUILDDIR)/malloc_s.o \
	$(pex_BUILDDIR)/utils.o \
	$(pex_BUILDDIR)/plugins.o \
	$(pex_BUILDDIR)/output_plugin.o \
	$(pex_BUILDDIR)/output.o \
	$(pex_BUILDDIR)/pev_api.o

####### Build rules

.PHONY: plugins install installdirs uninstall clean

all: libpex plugins

libpex: $(pex_lib_OBJS)
	$(LINK) -shared $(pex_LDFLAGS) -o $(pex_LIBNAME).so $^

plugins:
	cd $(pex_PLUGINS_DIR) && $(MAKE) $@

ofs2rva: $(pex_BUILDDIR)/ofs2rva.o $(pev_OBJS)
	$(CC) $< -o $(pex_BUILDDIR)/$@ $(pev_COMMON_DEPS) $(LDFLAGS)

pedis: CFLAGS += -I$(LIBUDIS86)
pedis: $(LIBUDIS86)/libudis86/*.c
pedis: $(pex_BUILDDIR)/pedis.o $(pev_OBJS)
	$(CC) $< -o $(pex_BUILDDIR)/$@ $(pev_COMMON_DEPS) $(LDFLAGS) $(CFLAGS) $(GNU_SOURCE) $(LIBUDIS86)/libudis86/*.c

pehash: LDFLAGS += -lssl -lcrypto
pehash: CFLAGS += -I$(LIBFUZZY)
pehash: $(pex_BUILDDIR)/pehash.o $(pev_OBJS)
	$(CC) $< -o $(pex_BUILDDIR)/$@ $(pev_COMMON_DEPS) $(LDFLAGS) $(CFLAGS) $(GNU_SOURCE) $(LIBFUZZY)/*.c

pepack: $(pex_BUILDDIR)/pepack.o $(pev_OBJS)
	$(CC) $< -o $(pex_BUILDDIR)/$@ $(pev_COMMON_DEPS) $(LDFLAGS)

peres: $(pex_BUILDDIR)/peres.o $(pev_OBJS)
	$(CC) $< -o $(pex_BUILDDIR)/$@ $(pev_COMMON_DEPS) $(LDFLAGS)

pescan: LDFLAGS += -lm
pescan: $(pex_BUILDDIR)/pescan.o $(pev_OBJS)
	$(CC) $< -o $(pex_BUILDDIR)/$@ $(pev_COMMON_DEPS) $(LDFLAGS)

pesec: LDFLAGS += -lcrypto
pesec: $(pex_BUILDDIR)/pesec.o $(pev_OBJS)
	$(CC) $< -o $(pex_BUILDDIR)/$@ $(pev_COMMON_DEPS) $(LDFLAGS)

pestr: $(pex_BUILDDIR)/pestr.o $(pev_OBJS)
	$(CC) $< -o $(pex_BUILDDIR)/$@ $(pev_COMMON_DEPS) $(LDFLAGS)

readpe: $(pex_BUILDDIR)/readpe.o $(pev_OBJS)
	$(CC) $< -o $(pex_BUILDDIR)/$@ $(pev_COMMON_DEPS) $(LDFLAGS)

rva2ofs: $(pex_BUILDDIR)/rva2ofs.o $(pev_OBJS)
	$(CC) $< -o $(pex_BUILDDIR)/$@ $(pev_COMMON_DEPS) $(LDFLAGS)

unlznt1: CFLAGS += -I$(LIBLZNT1)
unlznt1: $(pex_BUILDDIR)/unlznt1.o $(pev_OBJS)
	$(CC) $< -o $(pex_BUILDDIR)/$@ $(CFLAGS) $(GNU_SOURCE) $(LIBLZNT1)/*.c

# Generic rule matching sources
$(pex_BUILDDIR)/%.o: %.c
	@$(CHK_DIR_EXISTS) $(dir $@) || $(MKDIR) $(dir $@)
	$(CC) $(pex_CFLAGS) $(pex_GNU_SOURCE) -c $< -o $@

install: installdirs
	for prog in $(PROGS); do \
		$(INSTALL_PROGRAM) $(pex_BUILDDIR)/$$prog $(DESTDIR)$(bindir); \
		$(CHK_FILE_EXISTS) $(MANDIR)/$$prog$(man1ext) && \
			gzip -c -9 $(MANDIR)/$$prog$(man1ext) > $(DESTDIR)$(man1dir)/$$prog$(man1ext).gz || \
			echo -n; \
	done

	$(INSTALL_DATA) $(srcdir)/userdb.txt $(DESTDIR)$(SHAREDIR)
	cd $(pex_PLUGINS_DIR) && $(MAKE) $@

installdirs:
	@$(CHK_DIR_EXISTS) $(DESTDIR) || $(MKDIR) $(DESTDIR)
	@$(CHK_DIR_EXISTS) $(DESTDIR)$(bindir) || $(MKDIR) $(DESTDIR)$(bindir)
	@$(CHK_DIR_EXISTS) $(DESTDIR)$(man1dir) || $(MKDIR) $(DESTDIR)$(man1dir)
	@$(CHK_DIR_EXISTS) $(DESTDIR)$(SHAREDIR) || $(MKDIR) $(DESTDIR)$(SHAREDIR)

uninstall:
	for prog in $(PROGS); do \
		$(RM) $(DESTDIR)$(bindir)/$$prog; \
		$(RM) $(DESTDIR)$(man1dir)/$$prog$(man1ext).gz; \
	done
	$(RM_DIR) $(DESTDIR)$(SHAREDIR)
	cd $(pex_PLUGINS_DIR) && $(MAKE) $@

clean:
	$(RM_DIR) $(pex_BUILDDIR)
	$(RM) $(PROGS) *.o *.so
	cd $(pex_PLUGINS_DIR) && $(MAKE) $@
