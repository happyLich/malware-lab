#ifndef __PECKER_MCLA_PE_H__
#define __PECKER_MCLA_PE_H__
#include <base/pecker.h>
#include <pex.h>

#define  PE_FEAT_VAL_NUM   16

typedef struct
{
    uint8_t is_dll;
    uint8_t cpl;
    double entropy;
    uint8_t fpu_trick;
    uint8_t normal_imagebase;
    uint8_t fake_entry;

    uint8_t dos_stub;
    int tls_dir;
    uint16_t num_sec;
    uint32_t zero_len;
    uint32_t sus_name;
    uint32_t self_mdf;
    
    uint32_t size_init;
    uint32_t dll_cha;
    uint32_t im_ver;
    uint32_t check_sum;
} pe_val_t;

//creat PE structure feature train data
#define PE_NODE_REALLOC_SIZE  1024

typedef struct
{
    char *path;
    int lable;
} pe_node_t;

typedef struct
{
    pe_node_t *pe_list;
    uint32_t pe_num;
    uint32_t pe_max;
} pe_train_data_para_t;

int init_pe_train_data_para(pe_train_data_para_t *para);
int add_pe_train_data(pe_train_data_para_t *para, char *src, int lable);
int creat_pe_train_data(pe_train_data_para_t *para, char *dst);
int free_pe_train_data_para(pe_train_data_para_t *para);

pe_ctx_t *analysis_pe(char *src, int *report, pe_val_t *pe_val, char *msg, int cmd);

#endif

