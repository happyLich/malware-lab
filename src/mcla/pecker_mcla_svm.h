#ifndef __PECKER_MCLA_SVM_H__
#define __PECKER_MCLA_SVM_H__
#include <base/pecker.h>
#include <libsvm/svm.h>

typedef struct
{
    struct svm_model *svm;
    uint32_t input_num;

    uint8_t  normalized; 
    struct svm_node *mean;
    struct svm_node *max;
    struct svm_node *min;
    struct svm_node *max_min;
    
    void (*generate_feat_vector)(void *, size_t, struct svm_node *, uint32_t);
    
    double report;
} svm_model_s;

svm_model_s *pecker_svm_init();
int pecker_svm_free(svm_model_s *svm_m);

int pecker_svm_load_model(svm_model_s *svm_m, char *path, char *normal_para_path, uint32_t input_num, 
            void (*generate_feat_vector)(void *, size_t, struct svm_node *, uint32_t));

int pecker_svm_predict(svm_model_s *svm_m, void *data, size_t len);

#endif

